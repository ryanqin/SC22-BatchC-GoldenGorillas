(base) ]0;~/teams/SC22-BatchC-GoldenGorillas/app[01;34m~/teams/SC22-BatchC-GoldenGorillas/app[00m$ python3 test.py
(base) ]0;~/teams/SC22-BatchC-GoldenGorillas/app[01;34m~/teams/SC22-BatchC-GoldenGorillas/app[00m$ python3 test.py
Using cache found in /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/.cache/torch/hub/ultralytics_yolov5_master
YOLOv5 🚀 2022-8-2 Python-3.9.12 torch-1.8.1+cu102 CPU

Fusing layers... 
Model summary: 290 layers, 20897385 parameters, 0 gradients
Adding AutoShape... 
Model sucessfully loaded
Inference complete with results: 
         xmin        ymin        xmax        ymax  confidence  class  \
0  725.028381  235.216415  977.213745  522.082825    0.823891      9   
1  378.476685    7.081852  621.540771  278.924072    0.816275     11   
2  614.700989    7.742162  870.761414  282.140015    0.781272      4   
3    3.029530  241.974823  272.461395  515.072021    0.780688      7   
4  119.120354    7.214166  390.344910  278.808319    0.627838      9   
5  258.568787  247.795868  505.492523  519.405518    0.606827      5   
6  614.700806    7.849881  871.227051  280.146881    0.565108      9   
7  377.498688    9.193030  617.979248  277.467468    0.376909      9   
8  490.577698  252.628342  738.847595  521.291992    0.351326      9   
9  257.224091  243.662170  505.045654  517.535217    0.342347      9   

            name  
0  Quarter (CAD)  
1   Toonie (CAD)  
2   Loonie (CAD)  
3    Penny (CAD)  
4  Quarter (CAD)  
5   Nickel (CAD)  
6  Quarter (CAD)  
7  Quarter (CAD)  
8  Quarter (CAD)  
9  Quarter (CAD)  
Saved 1 image to [1mresults[0m
names ['Quarter (CAD)', 'Toonie (CAD)', 'Loonie (CAD)', 'Penny (CAD)', 'Quarter (CAD)', 'Nickel (CAD)', 'Quarter (CAD)', 'Quarter (CAD)', 'Quarter (CAD)', 'Quarter (CAD)']
names_count {'Quarter (CAD)': 6, 'Toonie (CAD)': 1, 'Loonie (CAD)': 1, 'Penny (CAD)': 1, 'Nickel (CAD)': 1}
coin_vals {'USD': 0, 'CAD': 4.56}
Traceback (most recent call last):
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/test.py", line 10, in <module>
    main()
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/test.py", line 7, in main
    print('total amount', detector.get_total_amount('USD'))
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/detect.py", line 96, in get_total_amount
    converted_amount += converter.convert(key, currency, coin_vals[key])
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 97, in convert
    rate = self._get_decoded_rate(
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 47, in _get_decoded_rate
    return self._decode_rates(
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 40, in _decode_rates
    decoded_data = response.json()
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/requests/models.py", line 900, in json
    return complexjson.loads(self.text, **kwargs)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/__init__.py", line 525, in loads
    return _default_decoder.decode(s)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/decoder.py", line 370, in decode
    obj, end = self.raw_decode(s)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/decoder.py", line 400, in raw_decode
    return self.scan_once(s, idx=_w(s, idx).end())
simplejson.errors.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
(base) ]0;~/teams/SC22-BatchC-GoldenGorillas/app[01;34m~/teams/SC22-BatchC-GoldenGorillas/app[00m$ python3 test.py
Using cache found in /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/.cache/torch/hub/ultralytics_yolov5_master
YOLOv5 🚀 2022-8-2 Python-3.9.12 torch-1.8.1+cu102 CPU

Fusing layers... 
Model summary: 290 layers, 20897385 parameters, 0 gradients
Adding AutoShape... 
Model sucessfully loaded
Inference complete with results: 
         xmin        ymin        xmax        ymax  confidence  class  \
0  725.028381  235.216415  977.213745  522.082825    0.823891      9   
1  378.476685    7.081852  621.540771  278.924072    0.816275     11   
2  614.700989    7.742162  870.761414  282.140015    0.781272      4   
3    3.029530  241.974823  272.461395  515.072021    0.780688      7   
4  119.120354    7.214166  390.344910  278.808319    0.627838      9   
5  258.568787  247.795868  505.492523  519.405518    0.606827      5   
6  614.700806    7.849881  871.227051  280.146881    0.565108      9   
7  377.498688    9.193030  617.979248  277.467468    0.376909      9   
8  490.577698  252.628342  738.847595  521.291992    0.351326      9   
9  257.224091  243.662170  505.045654  517.535217    0.342347      9   

            name  
0  Quarter (CAD)  
1   Toonie (CAD)  
2   Loonie (CAD)  
3    Penny (CAD)  
4  Quarter (CAD)  
5   Nickel (CAD)  
6  Quarter (CAD)  
7  Quarter (CAD)  
8  Quarter (CAD)  
9  Quarter (CAD)  
Saved 1 image to [1mresults[0m
names ['Quarter (CAD)', 'Toonie (CAD)', 'Loonie (CAD)', 'Penny (CAD)', 'Quarter (CAD)', 'Nickel (CAD)', 'Quarter (CAD)', 'Quarter (CAD)', 'Quarter (CAD)', 'Quarter (CAD)']
names_count {'Quarter (CAD)': 6, 'Toonie (CAD)': 1, 'Loonie (CAD)': 1, 'Penny (CAD)': 1, 'Nickel (CAD)': 1}
coin_vals {'USD': 0, 'CAD': 4.56}
Traceback (most recent call last):
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/test.py", line 10, in <module>
    main()
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/test.py", line 7, in main
    print('total amount', detector.get_total_amount('USD'))
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/detect.py", line 96, in get_total_amount
    converted_amount += converter.convert(key, currency, coin_vals[key])
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 97, in convert
    rate = self._get_decoded_rate(
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 47, in _get_decoded_rate
    return self._decode_rates(
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 40, in _decode_rates
    decoded_data = response.json()
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/requests/models.py", line 900, in json
    return complexjson.loads(self.text, **kwargs)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/__init__.py", line 525, in loads
    return _default_decoder.decode(s)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/decoder.py", line 370, in decode
    obj, end = self.raw_decode(s)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/decoder.py", line 400, in raw_decode
    return self.scan_once(s, idx=_w(s, idx).end())
simplejson.errors.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
(base) ]0;~/teams/SC22-BatchC-GoldenGorillas/app[01;34m~/teams/SC22-BatchC-GoldenGorillas/app[00m$ python3 test.py
Using cache found in /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/.cache/torch/hub/ultralytics_yolov5_master
YOLOv5 🚀 2022-8-2 Python-3.9.12 torch-1.8.1+cu102 CPU

Fusing layers... 
Model summary: 290 layers, 20897385 parameters, 0 gradients
Adding AutoShape... 
Model sucessfully loaded
Inference complete with results: 
         xmin        ymin        xmax        ymax  confidence  class  \
0  725.028381  235.216415  977.213745  522.082825    0.823891      9   
1  378.476685    7.081852  621.540771  278.924072    0.816275     11   
2  614.700989    7.742162  870.761414  282.140015    0.781272      4   
3    3.029530  241.974823  272.461395  515.072021    0.780688      7   
4  119.120354    7.214166  390.344910  278.808319    0.627838      9   
5  258.568787  247.795868  505.492523  519.405518    0.606827      5   
6  614.700806    7.849881  871.227051  280.146881    0.565108      9   
7  377.498688    9.193030  617.979248  277.467468    0.376909      9   
8  490.577698  252.628342  738.847595  521.291992    0.351326      9   
9  257.224091  243.662170  505.045654  517.535217    0.342347      9   

            name  
0  Quarter (CAD)  
1   Toonie (CAD)  
2   Loonie (CAD)  
3    Penny (CAD)  
4  Quarter (CAD)  
5   Nickel (CAD)  
6  Quarter (CAD)  
7  Quarter (CAD)  
8  Quarter (CAD)  
9  Quarter (CAD)  
Saved 1 image to [1mresults[0m
names ['Quarter (CAD)', 'Toonie (CAD)', 'Loonie (CAD)', 'Penny (CAD)', 'Quarter (CAD)', 'Nickel (CAD)', 'Quarter (CAD)', 'Quarter (CAD)', 'Quarter (CAD)', 'Quarter (CAD)']
names_count {'Quarter (CAD)': 6, 'Toonie (CAD)': 1, 'Loonie (CAD)': 1, 'Penny (CAD)': 1, 'Nickel (CAD)': 1}
coin_vals {'USD': 0, 'CAD': 4.56}
Traceback (most recent call last):
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/test.py", line 10, in <module>
    main()
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/test.py", line 7, in main
    print('total amount', detector.get_total_amount('USD'))
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/detect.py", line 96, in get_total_amount
    converted_amount += converter.convert(key, currency, coin_vals[key])
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 97, in convert
    rate = self._get_decoded_rate(
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 47, in _get_decoded_rate
    return self._decode_rates(
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 40, in _decode_rates
    decoded_data = response.json()
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/requests/models.py", line 900, in json
    return complexjson.loads(self.text, **kwargs)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/__init__.py", line 525, in loads
    return _default_decoder.decode(s)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/decoder.py", line 370, in decode
    obj, end = self.raw_decode(s)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/decoder.py", line 400, in raw_decode
    return self.scan_once(s, idx=_w(s, idx).end())
simplejson.errors.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
(base) ]0;~/teams/SC22-BatchC-GoldenGorillas/app[01;34m~/teams/SC22-BatchC-GoldenGorillas/app[00m$ python3 test.py
Using cache found in /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/.cache/torch/hub/ultralytics_yolov5_master
YOLOv5 🚀 2022-8-2 Python-3.9.12 torch-1.8.1+cu102 CPU

Fusing layers... 
Model summary: 290 layers, 20897385 parameters, 0 gradients
Adding AutoShape... 
Model sucessfully loaded
Inference complete with results: 
         xmin        ymin        xmax        ymax  confidence  class  \
0  725.028381  235.216415  977.213745  522.082825    0.823891      9   
1  378.476685    7.081852  621.540771  278.924072    0.816275     11   
2  614.700989    7.742162  870.761414  282.140015    0.781272      4   
3    3.029530  241.974823  272.461395  515.072021    0.780688      7   
4  119.120354    7.214166  390.344910  278.808319    0.627838      9   
5  258.568787  247.795868  505.492523  519.405518    0.606827      5   
6  614.700806    7.849881  871.227051  280.146881    0.565108      9   
7  377.498688    9.193030  617.979248  277.467468    0.376909      9   
8  490.577698  252.628342  738.847595  521.291992    0.351326      9   
9  257.224091  243.662170  505.045654  517.535217    0.342347      9   

            name  
0  Quarter (CAD)  
1   Toonie (CAD)  
2   Loonie (CAD)  
3    Penny (CAD)  
4  Quarter (CAD)  
5   Nickel (CAD)  
6  Quarter (CAD)  
7  Quarter (CAD)  
8  Quarter (CAD)  
9  Quarter (CAD)  
Saved 1 image to [1mresults[0m
names ['Quarter (CAD)', 'Toonie (CAD)', 'Loonie (CAD)', 'Penny (CAD)', 'Quarter (CAD)', 'Nickel (CAD)', 'Quarter (CAD)', 'Quarter (CAD)', 'Quarter (CAD)', 'Quarter (CAD)']
names_count {'Quarter (CAD)': 6, 'Toonie (CAD)': 1, 'Loonie (CAD)': 1, 'Penny (CAD)': 1, 'Nickel (CAD)': 1}
coin_vals {'USD': 0, 'CAD': 4.56}
Traceback (most recent call last):
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/test.py", line 10, in <module>
    main()
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/test.py", line 7, in main
    print('total amount', detector.get_total_amount('USD'))
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/detect.py", line 96, in get_total_amount
    converted_amount += converter.convert(key, currency, coin_vals[key])
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 97, in convert
    rate = self._get_decoded_rate(
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 47, in _get_decoded_rate
    return self._decode_rates(
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 40, in _decode_rates
    decoded_data = response.json()
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/requests/models.py", line 900, in json
    return complexjson.loads(self.text, **kwargs)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/__init__.py", line 525, in loads
    return _default_decoder.decode(s)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/decoder.py", line 370, in decode
    obj, end = self.raw_decode(s)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/decoder.py", line 400, in raw_decode
    return self.scan_once(s, idx=_w(s, idx).end())
simplejson.errors.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
(base) ]0;~/teams/SC22-BatchC-GoldenGorillas/app[01;34m~/teams/SC22-BatchC-GoldenGorillas/app[00m$ python3 test.py
Using cache found in /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/.cache/torch/hub/ultralytics_yolov5_master
YOLOv5 🚀 2022-8-2 Python-3.9.12 torch-1.8.1+cu102 CPU

Fusing layers... 
Model summary: 290 layers, 20897385 parameters, 0 gradients
Adding AutoShape... 
Model sucessfully loaded
Inference complete with results: 
         xmin        ymin        xmax        ymax  confidence  class  \
0  725.028381  235.216415  977.213745  522.082825    0.823891      9   
1  378.476685    7.081852  621.540771  278.924072    0.816275     11   
2  614.700989    7.742162  870.761414  282.140015    0.781272      4   
3    3.029530  241.974823  272.461395  515.072021    0.780688      7   
4  119.120354    7.214166  390.344910  278.808319    0.627838      9   
5  258.568787  247.795868  505.492523  519.405518    0.606827      5   
6  614.700806    7.849881  871.227051  280.146881    0.565108      9   
7  377.498688    9.193030  617.979248  277.467468    0.376909      9   
8  490.577698  252.628342  738.847595  521.291992    0.351326      9   
9  257.224091  243.662170  505.045654  517.535217    0.342347      9   

            name  
0  Quarter (CAD)  
1   Toonie (CAD)  
2   Loonie (CAD)  
3    Penny (CAD)  
4  Quarter (CAD)  
5   Nickel (CAD)  
6  Quarter (CAD)  
7  Quarter (CAD)  
8  Quarter (CAD)  
9  Quarter (CAD)  
Saved 1 image to [1mresults[0m
names ['Quarter (CAD)', 'Toonie (CAD)', 'Loonie (CAD)', 'Penny (CAD)', 'Quarter (CAD)', 'Nickel (CAD)', 'Quarter (CAD)', 'Quarter (CAD)', 'Quarter (CAD)', 'Quarter (CAD)']
names_count {'Quarter (CAD)': 6, 'Toonie (CAD)': 1, 'Loonie (CAD)': 1, 'Penny (CAD)': 1, 'Nickel (CAD)': 1}
coin_vals {'USD': 0, 'CAD': 4.56}
Traceback (most recent call last):
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/test.py", line 10, in <module>
    main()
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/test.py", line 7, in main
    print('total amount', detector.get_total_amount('USD'))
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/detect.py", line 96, in get_total_amount
    converted_amount += converter.convert(key, currency, coin_vals[key])
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 97, in convert
    rate = self._get_decoded_rate(
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 47, in _get_decoded_rate
    return self._decode_rates(
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 40, in _decode_rates
    decoded_data = response.json()
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/requests/models.py", line 900, in json
    return complexjson.loads(self.text, **kwargs)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/__init__.py", line 525, in loads
    return _default_decoder.decode(s)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/decoder.py", line 370, in decode
    obj, end = self.raw_decode(s)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/decoder.py", line 400, in raw_decode
    return self.scan_once(s, idx=_w(s, idx).end())
simplejson.errors.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
(base) ]0;~/teams/SC22-BatchC-GoldenGorillas/app[01;34m~/teams/SC22-BatchC-GoldenGorillas/app[00m$ python3 test.py
Using cache found in /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/.cache/torch/hub/ultralytics_yolov5_master
YOLOv5 🚀 2022-8-2 Python-3.9.12 torch-1.8.1+cu102 CPU

Fusing layers... 
Model summary: 290 layers, 20897385 parameters, 0 gradients
Adding AutoShape... 
Model sucessfully loaded
Inference complete with results: 
         xmin        ymin        xmax        ymax  confidence  class  \
0  725.028381  235.216415  977.213745  522.082825    0.823891      9   
1  378.476685    7.081852  621.540771  278.924072    0.816275     11   
2  614.700989    7.742162  870.761414  282.140015    0.781272      4   
3    3.029530  241.974823  272.461395  515.072021    0.780688      7   
4  119.120354    7.214166  390.344910  278.808319    0.627838      9   
5  258.568787  247.795868  505.492523  519.405518    0.606827      5   
6  614.700806    7.849881  871.227051  280.146881    0.565108      9   
7  377.498688    9.193030  617.979248  277.467468    0.376909      9   
8  490.577698  252.628342  738.847595  521.291992    0.351326      9   
9  257.224091  243.662170  505.045654  517.535217    0.342347      9   

            name  
0  Quarter (CAD)  
1   Toonie (CAD)  
2   Loonie (CAD)  
3    Penny (CAD)  
4  Quarter (CAD)  
5   Nickel (CAD)  
6  Quarter (CAD)  
7  Quarter (CAD)  
8  Quarter (CAD)  
9  Quarter (CAD)  
Saved 1 image to [1mresults[0m
names ['Quarter (CAD)', 'Toonie (CAD)', 'Loonie (CAD)', 'Penny (CAD)', 'Quarter (CAD)', 'Nickel (CAD)', 'Quarter (CAD)', 'Quarter (CAD)', 'Quarter (CAD)', 'Quarter (CAD)']
names_count {'Quarter (CAD)': 6, 'Toonie (CAD)': 1, 'Loonie (CAD)': 1, 'Penny (CAD)': 1, 'Nickel (CAD)': 1}
coin_vals {'USD': 0, 'CAD': 4.56}
Traceback (most recent call last):
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/test.py", line 10, in <module>
    main()
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/test.py", line 7, in main
    print('total amount', detector.get_total_amount('USD'))
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/detect.py", line 96, in get_total_amount
    converted_amount += converter.convert(key, currency, coin_vals[key])
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 97, in convert
    rate = self._get_decoded_rate(
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 47, in _get_decoded_rate
    return self._decode_rates(
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 40, in _decode_rates
    decoded_data = response.json()
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/requests/models.py", line 900, in json
    return complexjson.loads(self.text, **kwargs)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/__init__.py", line 525, in loads
    return _default_decoder.decode(s)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/decoder.py", line 370, in decode
    obj, end = self.raw_decode(s)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/decoder.py", line 400, in raw_decode
    return self.scan_once(s, idx=_w(s, idx).end())
simplejson.errors.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
(base) ]0;~/teams/SC22-BatchC-GoldenGorillas/app[01;34m~/teams/SC22-BatchC-GoldenGorillas/app[00m$ python3 test.py
Using cache found in /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/.cache/torch/hub/ultralytics_yolov5_master
YOLOv5 🚀 2022-8-2 Python-3.9.12 torch-1.8.1+cu102 CPU

Fusing layers... 
Model summary: 290 layers, 20897385 parameters, 0 gradients
Adding AutoShape... 
Model sucessfully loaded
Inference complete with results: 
         xmin        ymin        xmax        ymax  confidence  class  \
0  725.028381  235.216415  977.213745  522.082825    0.823891      9   
1  378.476685    7.081852  621.540771  278.924072    0.816275     11   
2  614.700989    7.742162  870.761414  282.140015    0.781272      4   
3    3.029530  241.974823  272.461395  515.072021    0.780688      7   
4  119.120354    7.214166  390.344910  278.808319    0.627838      9   
5  258.568787  247.795868  505.492523  519.405518    0.606827      5   
6  614.700806    7.849881  871.227051  280.146881    0.565108      9   
7  377.498688    9.193030  617.979248  277.467468    0.376909      9   
8  490.577698  252.628342  738.847595  521.291992    0.351326      9   
9  257.224091  243.662170  505.045654  517.535217    0.342347      9   

            name  
0  Quarter (CAD)  
1   Toonie (CAD)  
2   Loonie (CAD)  
3    Penny (CAD)  
4  Quarter (CAD)  
5   Nickel (CAD)  
6  Quarter (CAD)  
7  Quarter (CAD)  
8  Quarter (CAD)  
9  Quarter (CAD)  
Saved 1 image to [1mresults[0m
names ['Quarter (CAD)', 'Toonie (CAD)', 'Loonie (CAD)', 'Penny (CAD)', 'Quarter (CAD)', 'Nickel (CAD)', 'Quarter (CAD)', 'Quarter (CAD)', 'Quarter (CAD)', 'Quarter (CAD)']
names_count {'Quarter (CAD)': 6, 'Toonie (CAD)': 1, 'Loonie (CAD)': 1, 'Penny (CAD)': 1, 'Nickel (CAD)': 1}
coin_vals {'USD': 0, 'CAD': 4.56}
Traceback (most recent call last):
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/test.py", line 10, in <module>
    main()
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/test.py", line 7, in main
    print('total amount', detector.get_total_amount('USD'))
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/detect.py", line 96, in get_total_amount
    converted_amount += converter.convert(key, currency, coin_vals[key])
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 97, in convert
    rate = self._get_decoded_rate(
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 47, in _get_decoded_rate
    return self._decode_rates(
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 40, in _decode_rates
    decoded_data = response.json()
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/requests/models.py", line 900, in json
    return complexjson.loads(self.text, **kwargs)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/__init__.py", line 525, in loads
    return _default_decoder.decode(s)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/decoder.py", line 370, in decode
    obj, end = self.raw_decode(s)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/decoder.py", line 400, in raw_decode
    return self.scan_once(s, idx=_w(s, idx).end())
simplejson.errors.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
(base) ]0;~/teams/SC22-BatchC-GoldenGorillas/app[01;34m~/teams/SC22-BatchC-GoldenGorillas/app[00m$ python3 test.py
Using cache found in /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/.cache/torch/hub/ultralytics_yolov5_master
YOLOv5 🚀 2022-8-2 Python-3.9.12 torch-1.8.1+cu102 CPU

Fusing layers... 
Model summary: 290 layers, 20897385 parameters, 0 gradients
Adding AutoShape... 
Model sucessfully loaded
Inference complete with results: 
         xmin        ymin        xmax        ymax  confidence  class  \
0  725.028381  235.216415  977.213745  522.082825    0.823891      9   
1  378.476685    7.081852  621.540771  278.924072    0.816275     11   
2  614.700989    7.742162  870.761414  282.140015    0.781272      4   
3    3.029530  241.974823  272.461395  515.072021    0.780688      7   
4  119.120354    7.214166  390.344910  278.808319    0.627838      9   
5  258.568787  247.795868  505.492523  519.405518    0.606827      5   
6  614.700806    7.849881  871.227051  280.146881    0.565108      9   
7  377.498688    9.193030  617.979248  277.467468    0.376909      9   
8  490.577698  252.628342  738.847595  521.291992    0.351326      9   
9  257.224091  243.662170  505.045654  517.535217    0.342347      9   

            name  
0  Quarter (CAD)  
1   Toonie (CAD)  
2   Loonie (CAD)  
3    Penny (CAD)  
4  Quarter (CAD)  
5   Nickel (CAD)  
6  Quarter (CAD)  
7  Quarter (CAD)  
8  Quarter (CAD)  
9  Quarter (CAD)  
Saved 1 image to [1mresults[0m
names ['Quarter (CAD)', 'Toonie (CAD)', 'Loonie (CAD)', 'Penny (CAD)', 'Quarter (CAD)', 'Nickel (CAD)', 'Quarter (CAD)', 'Quarter (CAD)', 'Quarter (CAD)', 'Quarter (CAD)']
names_count {'Quarter (CAD)': 6, 'Toonie (CAD)': 1, 'Loonie (CAD)': 1, 'Penny (CAD)': 1, 'Nickel (CAD)': 1}
coin_vals {'USD': 0, 'CAD': 4.56}
Traceback (most recent call last):
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/test.py", line 10, in <module>
    main()
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/test.py", line 7, in main
    print('total amount', detector.get_total_amount('USD'))
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/detect.py", line 96, in get_total_amount
    converted_amount += converter.convert(key, currency, coin_vals[key])
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 97, in convert
    rate = self._get_decoded_rate(
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 47, in _get_decoded_rate
    return self._decode_rates(
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 40, in _decode_rates
    decoded_data = response.json()
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/requests/models.py", line 900, in json
    return complexjson.loads(self.text, **kwargs)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/__init__.py", line 525, in loads
    return _default_decoder.decode(s)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/decoder.py", line 370, in decode
    obj, end = self.raw_decode(s)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/decoder.py", line 400, in raw_decode
    return self.scan_once(s, idx=_w(s, idx).end())
simplejson.errors.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
(base) ]0;~/teams/SC22-BatchC-GoldenGorillas/app[01;34m~/teams/SC22-BatchC-GoldenGorillas/app[00m$ python3 test.py
Using cache found in /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/.cache/torch/hub/ultralytics_yolov5_master
YOLOv5 🚀 2022-8-2 Python-3.9.12 torch-1.8.1+cu102 CPU

Fusing layers... 
Model summary: 290 layers, 20897385 parameters, 0 gradients
Adding AutoShape... 
Model sucessfully loaded
Inference complete with results: 
         xmin        ymin        xmax        ymax  confidence  class  \
0  725.028381  235.216415  977.213745  522.082825    0.823891      9   
1  378.476685    7.081852  621.540771  278.924072    0.816275     11   
2  614.700989    7.742162  870.761414  282.140015    0.781272      4   
3    3.029530  241.974823  272.461395  515.072021    0.780688      7   
4  119.120354    7.214166  390.344910  278.808319    0.627838      9   
5  258.568787  247.795868  505.492523  519.405518    0.606827      5   
6  614.700806    7.849881  871.227051  280.146881    0.565108      9   
7  377.498688    9.193030  617.979248  277.467468    0.376909      9   
8  490.577698  252.628342  738.847595  521.291992    0.351326      9   
9  257.224091  243.662170  505.045654  517.535217    0.342347      9   

            name  
0  Quarter (CAD)  
1   Toonie (CAD)  
2   Loonie (CAD)  
3    Penny (CAD)  
4  Quarter (CAD)  
5   Nickel (CAD)  
6  Quarter (CAD)  
7  Quarter (CAD)  
8  Quarter (CAD)  
9  Quarter (CAD)  
Saved 1 image to [1mresults[0m
hi
names ['Quarter (CAD)', 'Toonie (CAD)', 'Loonie (CAD)', 'Penny (CAD)', 'Quarter (CAD)', 'Nickel (CAD)', 'Quarter (CAD)', 'Quarter (CAD)', 'Quarter (CAD)', 'Quarter (CAD)']
names_count {'Quarter (CAD)': 6, 'Toonie (CAD)': 1, 'Loonie (CAD)': 1, 'Penny (CAD)': 1, 'Nickel (CAD)': 1}
coin_vals {'USD': 0, 'CAD': 4.56}
Traceback (most recent call last):
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/test.py", line 11, in <module>
    main()
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/test.py", line 8, in main
    print('total amount', detector.get_total_amount('USD'))
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/detect.py", line 96, in get_total_amount
    converted_amount += converter.convert(key, currency, coin_vals[key])
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 97, in convert
    rate = self._get_decoded_rate(
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 47, in _get_decoded_rate
    return self._decode_rates(
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 40, in _decode_rates
    decoded_data = response.json()
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/requests/models.py", line 900, in json
    return complexjson.loads(self.text, **kwargs)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/__init__.py", line 525, in loads
    return _default_decoder.decode(s)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/decoder.py", line 370, in decode
    obj, end = self.raw_decode(s)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/decoder.py", line 400, in raw_decode
    return self.scan_once(s, idx=_w(s, idx).end())
simplejson.errors.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
(base) ]0;~/teams/SC22-BatchC-GoldenGorillas/app[01;34m~/teams/SC22-BatchC-GoldenGorillas/app[00m$ python3 test.py
Using cache found in /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/.cache/torch/hub/ultralytics_yolov5_master
YOLOv5 🚀 2022-8-2 Python-3.9.12 torch-1.8.1+cu102 CPU

Fusing layers... 
Model summary: 290 layers, 20897385 parameters, 0 gradients
Adding AutoShape... 
Model sucessfully loaded
Inference complete with results: 
         xmin        ymin        xmax        ymax  confidence  class  \
0  725.028381  235.216415  977.213745  522.082825    0.823891      9   
1  378.476685    7.081852  621.540771  278.924072    0.816275     11   
2  614.700989    7.742162  870.761414  282.140015    0.781272      4   
3    3.029530  241.974823  272.461395  515.072021    0.780688      7   
4  119.120354    7.214166  390.344910  278.808319    0.627838      9   
5  258.568787  247.795868  505.492523  519.405518    0.606827      5   
6  614.700806    7.849881  871.227051  280.146881    0.565108      9   
7  377.498688    9.193030  617.979248  277.467468    0.376909      9   
8  490.577698  252.628342  738.847595  521.291992    0.351326      9   
9  257.224091  243.662170  505.045654  517.535217    0.342347      9   

            name  
0  Quarter (CAD)  
1   Toonie (CAD)  
2   Loonie (CAD)  
3    Penny (CAD)  
4  Quarter (CAD)  
5   Nickel (CAD)  
6  Quarter (CAD)  
7  Quarter (CAD)  
8  Quarter (CAD)  
9  Quarter (CAD)  
Saved 1 image to [1mresults[0m
names ['Quarter (CAD)', 'Toonie (CAD)', 'Loonie (CAD)', 'Penny (CAD)', 'Quarter (CAD)', 'Nickel (CAD)', 'Quarter (CAD)', 'Quarter (CAD)', 'Quarter (CAD)', 'Quarter (CAD)']
names_count {'Quarter (CAD)': 6, 'Toonie (CAD)': 1, 'Loonie (CAD)': 1, 'Penny (CAD)': 1, 'Nickel (CAD)': 1}
coin_vals {'USD': 0, 'CAD': 4.56}
Traceback (most recent call last):
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/test.py", line 10, in <module>
    main()
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/test.py", line 7, in main
    print('total amount', detector.get_total_amount('USD'))
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/detect.py", line 96, in get_total_amount
    converted_amount += converter.convert(key, currency, coin_vals[key])
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 97, in convert
    rate = self._get_decoded_rate(
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 47, in _get_decoded_rate
    return self._decode_rates(
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 40, in _decode_rates
    decoded_data = response.json()
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/requests/models.py", line 900, in json
    return complexjson.loads(self.text, **kwargs)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/__init__.py", line 525, in loads
    return _default_decoder.decode(s)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/decoder.py", line 370, in decode
    obj, end = self.raw_decode(s)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/decoder.py", line 400, in raw_decode
    return self.scan_once(s, idx=_w(s, idx).end())
simplejson.errors.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
(base) ]0;~/teams/SC22-BatchC-GoldenGorillas/app[01;34m~/teams/SC22-BatchC-GoldenGorillas/app[00m$ python3 test.py
Using cache found in /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/.cache/torch/hub/ultralytics_yolov5_master
YOLOv5 🚀 2022-8-2 Python-3.9.12 torch-1.8.1+cu102 CPU

Fusing layers... 
Model summary: 290 layers, 20897385 parameters, 0 gradients
Adding AutoShape... 
Model sucessfully loaded
Inference complete with results: 
         xmin        ymin        xmax        ymax  confidence  class  \
0  725.028381  235.216415  977.213745  522.082825    0.823891      9   
1  378.476685    7.081852  621.540771  278.924072    0.816275     11   
2  614.700989    7.742162  870.761414  282.140015    0.781272      4   
3    3.029530  241.974823  272.461395  515.072021    0.780688      7   
4  119.120354    7.214166  390.344910  278.808319    0.627838      9   
5  258.568787  247.795868  505.492523  519.405518    0.606827      5   
6  614.700806    7.849881  871.227051  280.146881    0.565108      9   
7  377.498688    9.193030  617.979248  277.467468    0.376909      9   
8  490.577698  252.628342  738.847595  521.291992    0.351326      9   
9  257.224091  243.662170  505.045654  517.535217    0.342347      9   

            name  
0  Quarter (CAD)  
1   Toonie (CAD)  
2   Loonie (CAD)  
3    Penny (CAD)  
4  Quarter (CAD)  
5   Nickel (CAD)  
6  Quarter (CAD)  
7  Quarter (CAD)  
8  Quarter (CAD)  
9  Quarter (CAD)  
Saved 1 image to [1mresults[0m
names ['Quarter (CAD)', 'Toonie (CAD)', 'Loonie (CAD)', 'Penny (CAD)', 'Quarter (CAD)', 'Nickel (CAD)', 'Quarter (CAD)', 'Quarter (CAD)', 'Quarter (CAD)', 'Quarter (CAD)']
names_count {'Quarter (CAD)': 6, 'Toonie (CAD)': 1, 'Loonie (CAD)': 1, 'Penny (CAD)': 1, 'Nickel (CAD)': 1}
coin_vals {'USD': 0, 'CAD': 4.56}
Traceback (most recent call last):
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/test.py", line 10, in <module>
    main()
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/test.py", line 7, in main
    print('total amount', detector.get_total_amount('USD'))
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/detect.py", line 96, in get_total_amount
    converted_amount += converter.convert(key, currency, coin_vals[key])
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 97, in convert
    rate = self._get_decoded_rate(
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 47, in _get_decoded_rate
    return self._decode_rates(
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 40, in _decode_rates
    decoded_data = response.json()
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/requests/models.py", line 900, in json
    return complexjson.loads(self.text, **kwargs)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/__init__.py", line 525, in loads
    return _default_decoder.decode(s)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/decoder.py", line 370, in decode
    obj, end = self.raw_decode(s)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/decoder.py", line 400, in raw_decode
    return self.scan_once(s, idx=_w(s, idx).end())
simplejson.errors.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
(base) ]0;~/teams/SC22-BatchC-GoldenGorillas/app[01;34m~/teams/SC22-BatchC-GoldenGorillas/app[00m$ python3 test.py
Using cache found in /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/.cache/torch/hub/ultralytics_yolov5_master
YOLOv5 🚀 2022-8-2 Python-3.9.12 torch-1.8.1+cu102 CPU

Fusing layers... 
Model summary: 290 layers, 20897385 parameters, 0 gradients
Adding AutoShape... 
Model sucessfully loaded
Inference complete with results: 
         xmin        ymin        xmax        ymax  confidence  class  \
0  725.028381  235.216415  977.213745  522.082825    0.823891      9   
1  378.476685    7.081852  621.540771  278.924072    0.816275     11   
2  614.700989    7.742162  870.761414  282.140015    0.781272      4   
3    3.029530  241.974823  272.461395  515.072021    0.780688      7   
4  119.120354    7.214166  390.344910  278.808319    0.627838      9   
5  258.568787  247.795868  505.492523  519.405518    0.606827      5   
6  614.700806    7.849881  871.227051  280.146881    0.565108      9   
7  377.498688    9.193030  617.979248  277.467468    0.376909      9   
8  490.577698  252.628342  738.847595  521.291992    0.351326      9   
9  257.224091  243.662170  505.045654  517.535217    0.342347      9   

            name  
0  Quarter (CAD)  
1   Toonie (CAD)  
2   Loonie (CAD)  
3    Penny (CAD)  
4  Quarter (CAD)  
5   Nickel (CAD)  
6  Quarter (CAD)  
7  Quarter (CAD)  
8  Quarter (CAD)  
9  Quarter (CAD)  
Saved 1 image to [1mresults[0m
names ['Quarter (CAD)', 'Toonie (CAD)', 'Loonie (CAD)', 'Penny (CAD)', 'Quarter (CAD)', 'Nickel (CAD)', 'Quarter (CAD)', 'Quarter (CAD)', 'Quarter (CAD)', 'Quarter (CAD)']
names_count {'Quarter (CAD)': 6, 'Toonie (CAD)': 1, 'Loonie (CAD)': 1, 'Penny (CAD)': 1, 'Nickel (CAD)': 1}
coin_vals {'USD': 0, 'CAD': 4.56}
Traceback (most recent call last):
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/test.py", line 10, in <module>
    main()
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/test.py", line 7, in main
    print('total amount', detector.get_total_amount('USD'))
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/detect.py", line 96, in get_total_amount
    converted_amount += converter.convert(key, currency, coin_vals[key])
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 97, in convert
    rate = self._get_decoded_rate(
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 47, in _get_decoded_rate
    return self._decode_rates(
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 40, in _decode_rates
    decoded_data = response.json()
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/requests/models.py", line 900, in json
    return complexjson.loads(self.text, **kwargs)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/__init__.py", line 525, in loads
    return _default_decoder.decode(s)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/decoder.py", line 370, in decode
    obj, end = self.raw_decode(s)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/decoder.py", line 400, in raw_decode
    return self.scan_once(s, idx=_w(s, idx).end())
simplejson.errors.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
(base) ]0;~/teams/SC22-BatchC-GoldenGorillas/app[01;34m~/teams/SC22-BatchC-GoldenGorillas/app[00m$ ls
[0m[01;34m__pycache__[0m  aug4-v8.pt  aug5-v9.pt  [01;35mcanadian_coins.jpg[0m  detect.py  main.py  [01;34mresults[0m  [01;34mstatic[0m  [01;34mtemplates[0m  terminal.term  test.py  url_utils.py
(base) ]0;~/teams/SC22-BatchC-GoldenGorillas/app[01;34m~/teams/SC22-BatchC-GoldenGorillas/app[00m$ python test.py
Using cache found in /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/.cache/torch/hub/ultralytics_yolov5_master
YOLOv5 🚀 2022-8-2 Python-3.9.12 torch-1.8.1+cu102 CPU

Fusing layers... 
Model summary: 290 layers, 20897385 parameters, 0 gradients
Adding AutoShape... 
Model sucessfully loaded
Inference complete with results: 
         xmin        ymin        xmax        ymax  confidence  class  \
0  725.028381  235.216415  977.213745  522.082825    0.823891      9   
1  378.476685    7.081852  621.540771  278.924072    0.816275     11   
2  614.700989    7.742162  870.761414  282.140015    0.781272      4   
3    3.029530  241.974823  272.461395  515.072021    0.780688      7   
4  119.120354    7.214166  390.344910  278.808319    0.627838      9   
5  258.568787  247.795868  505.492523  519.405518    0.606827      5   
6  614.700806    7.849881  871.227051  280.146881    0.565108      9   
7  377.498688    9.193030  617.979248  277.467468    0.376909      9   
8  490.577698  252.628342  738.847595  521.291992    0.351326      9   
9  257.224091  243.662170  505.045654  517.535217    0.342347      9   

            name  
0  Quarter (CAD)  
1   Toonie (CAD)  
2   Loonie (CAD)  
3    Penny (CAD)  
4  Quarter (CAD)  
5   Nickel (CAD)  
6  Quarter (CAD)  
7  Quarter (CAD)  
8  Quarter (CAD)  
9  Quarter (CAD)  
Saved 1 image to [1mresults[0m
names ['Quarter (CAD)', 'Toonie (CAD)', 'Loonie (CAD)', 'Penny (CAD)', 'Quarter (CAD)', 'Nickel (CAD)', 'Quarter (CAD)', 'Quarter (CAD)', 'Quarter (CAD)', 'Quarter (CAD)']
names_count {'Quarter (CAD)': 6, 'Toonie (CAD)': 1, 'Loonie (CAD)': 1, 'Penny (CAD)': 1, 'Nickel (CAD)': 1}
coin_vals {'USD': 0, 'CAD': 4.56}
Traceback (most recent call last):
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/test.py", line 10, in <module>
    main()
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/test.py", line 7, in main
    print('total amount', detector.get_total_amount('USD'))
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/detect.py", line 96, in get_total_amount
    converted_amount += converter.convert(key, currency, coin_vals[key])
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 97, in convert
    rate = self._get_decoded_rate(
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 47, in _get_decoded_rate
    return self._decode_rates(
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 40, in _decode_rates
    decoded_data = response.json()
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/requests/models.py", line 900, in json
    return complexjson.loads(self.text, **kwargs)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/__init__.py", line 525, in loads
    return _default_decoder.decode(s)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/decoder.py", line 370, in decode
    obj, end = self.raw_decode(s)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/decoder.py", line 400, in raw_decode
    return self.scan_once(s, idx=_w(s, idx).end())
simplejson.errors.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
(base) ]0;~/teams/SC22-BatchC-GoldenGorillas/app[01;34m~/teams/SC22-BatchC-GoldenGorillas/app[00m$ python test.py
Using cache found in /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/.cache/torch/hub/ultralytics_yolov5_master
YOLOv5 🚀 2022-8-2 Python-3.9.12 torch-1.8.1+cu102 CPU

Fusing layers... 
Model summary: 290 layers, 20897385 parameters, 0 gradients
Adding AutoShape... 
Model sucessfully loaded
Inference complete with results: 
         xmin        ymin        xmax        ymax  confidence  class  \
0  725.028381  235.216415  977.213745  522.082825    0.823891      9   
1  378.476685    7.081852  621.540771  278.924072    0.816275     11   
2  614.700989    7.742162  870.761414  282.140015    0.781272      4   
3    3.029530  241.974823  272.461395  515.072021    0.780688      7   
4  119.120354    7.214166  390.344910  278.808319    0.627838      9   
5  258.568787  247.795868  505.492523  519.405518    0.606827      5   
6  614.700806    7.849881  871.227051  280.146881    0.565108      9   
7  377.498688    9.193030  617.979248  277.467468    0.376909      9   
8  490.577698  252.628342  738.847595  521.291992    0.351326      9   
9  257.224091  243.662170  505.045654  517.535217    0.342347      9   

            name  
0  Quarter (CAD)  
1   Toonie (CAD)  
2   Loonie (CAD)  
3    Penny (CAD)  
4  Quarter (CAD)  
5   Nickel (CAD)  
6  Quarter (CAD)  
7  Quarter (CAD)  
8  Quarter (CAD)  
9  Quarter (CAD)  
Saved 1 image to [1mresults[0m
names ['Quarter (CAD)', 'Toonie (CAD)', 'Loonie (CAD)', 'Penny (CAD)', 'Quarter (CAD)', 'Nickel (CAD)', 'Quarter (CAD)', 'Quarter (CAD)', 'Quarter (CAD)', 'Quarter (CAD)']
names_count {'Quarter (CAD)': 6, 'Toonie (CAD)': 1, 'Loonie (CAD)': 1, 'Penny (CAD)': 1, 'Nickel (CAD)': 1}
coin_vals {'USD': 0, 'CAD': 4.56}
Traceback (most recent call last):
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/test.py", line 10, in <module>
    main()
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/test.py", line 7, in main
    print('total amount', detector.get_total_amount('USD'))
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/detect.py", line 96, in get_total_amount
    converted_amount += converter.convert(key, currency, coin_vals[key])
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 97, in convert
    rate = self._get_decoded_rate(
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 47, in _get_decoded_rate
    return self._decode_rates(
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 40, in _decode_rates
    decoded_data = response.json()
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/requests/models.py", line 900, in json
    return complexjson.loads(self.text, **kwargs)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/__init__.py", line 525, in loads
    return _default_decoder.decode(s)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/decoder.py", line 370, in decode
    obj, end = self.raw_decode(s)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/decoder.py", line 400, in raw_decode
    return self.scan_once(s, idx=_w(s, idx).end())
simplejson.errors.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
(base) ]0;~/teams/SC22-BatchC-GoldenGorillas/app[01;34m~/teams/SC22-BatchC-GoldenGorillas/app[00m$ python test.py
Using cache found in /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/.cache/torch/hub/ultralytics_yolov5_master
YOLOv5 🚀 2022-8-2 Python-3.9.12 torch-1.8.1+cu102 CPU

Fusing layers... 
Model summary: 290 layers, 20897385 parameters, 0 gradients
Adding AutoShape... 
Model sucessfully loaded
Inference complete with results: 
         xmin        ymin        xmax        ymax  confidence  class  \
0  725.028381  235.216415  977.213745  522.082825    0.823891      9   
1  378.476685    7.081852  621.540771  278.924072    0.816275     11   
2  614.700989    7.742162  870.761414  282.140015    0.781272      4   
3    3.029530  241.974823  272.461395  515.072021    0.780688      7   
4  119.120354    7.214166  390.344910  278.808319    0.627838      9   
5  258.568787  247.795868  505.492523  519.405518    0.606827      5   
6  614.700806    7.849881  871.227051  280.146881    0.565108      9   
7  377.498688    9.193030  617.979248  277.467468    0.376909      9   
8  490.577698  252.628342  738.847595  521.291992    0.351326      9   
9  257.224091  243.662170  505.045654  517.535217    0.342347      9   

            name  
0  Quarter (CAD)  
1   Toonie (CAD)  
2   Loonie (CAD)  
3    Penny (CAD)  
4  Quarter (CAD)  
5   Nickel (CAD)  
6  Quarter (CAD)  
7  Quarter (CAD)  
8  Quarter (CAD)  
9  Quarter (CAD)  
Saved 1 image to [1mresults[0m
names ['Quarter (CAD)', 'Toonie (CAD)', 'Loonie (CAD)', 'Penny (CAD)', 'Quarter (CAD)', 'Nickel (CAD)', 'Quarter (CAD)', 'Quarter (CAD)', 'Quarter (CAD)', 'Quarter (CAD)']
names_count {'Quarter (CAD)': 6, 'Toonie (CAD)': 1, 'Loonie (CAD)': 1, 'Penny (CAD)': 1, 'Nickel (CAD)': 1}
coin_vals {'USD': 0, 'CAD': 4.56}
key USD
key CAD
Traceback (most recent call last):
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/test.py", line 10, in <module>
    main()
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/test.py", line 7, in main
    print('total amount', detector.get_total_amount('USD'))
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/detect.py", line 97, in get_total_amount
    converted_amount += converter.convert(key, currency, coin_vals[key])
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 97, in convert
    rate = self._get_decoded_rate(
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 47, in _get_decoded_rate
    return self._decode_rates(
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 40, in _decode_rates
    decoded_data = response.json()
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/requests/models.py", line 900, in json
    return complexjson.loads(self.text, **kwargs)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/__init__.py", line 525, in loads
    return _default_decoder.decode(s)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/decoder.py", line 370, in decode
    obj, end = self.raw_decode(s)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/decoder.py", line 400, in raw_decode
    return self.scan_once(s, idx=_w(s, idx).end())
simplejson.errors.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
(base) ]0;~/teams/SC22-BatchC-GoldenGorillas/app[01;34m~/teams/SC22-BatchC-GoldenGorillas/app[00m$ python test.py
Using cache found in /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/.cache/torch/hub/ultralytics_yolov5_master
YOLOv5 🚀 2022-8-2 Python-3.9.12 torch-1.8.1+cu102 CPU

Fusing layers... 
Model summary: 290 layers, 20897385 parameters, 0 gradients
Adding AutoShape... 
Model sucessfully loaded
Inference complete with results: 
         xmin        ymin        xmax        ymax  confidence  class  \
0  725.028381  235.216415  977.213745  522.082825    0.823891      9   
1  378.476685    7.081852  621.540771  278.924072    0.816275     11   
2  614.700989    7.742162  870.761414  282.140015    0.781272      4   
3    3.029530  241.974823  272.461395  515.072021    0.780688      7   
4  119.120354    7.214166  390.344910  278.808319    0.627838      9   
5  258.568787  247.795868  505.492523  519.405518    0.606827      5   
6  614.700806    7.849881  871.227051  280.146881    0.565108      9   
7  377.498688    9.193030  617.979248  277.467468    0.376909      9   
8  490.577698  252.628342  738.847595  521.291992    0.351326      9   
9  257.224091  243.662170  505.045654  517.535217    0.342347      9   

            name  
0  Quarter (CAD)  
1   Toonie (CAD)  
2   Loonie (CAD)  
3    Penny (CAD)  
4  Quarter (CAD)  
5   Nickel (CAD)  
6  Quarter (CAD)  
7  Quarter (CAD)  
8  Quarter (CAD)  
9  Quarter (CAD)  
Saved 1 image to [1mresults[0m
names ['Quarter (CAD)', 'Toonie (CAD)', 'Loonie (CAD)', 'Penny (CAD)', 'Quarter (CAD)', 'Nickel (CAD)', 'Quarter (CAD)', 'Quarter (CAD)', 'Quarter (CAD)', 'Quarter (CAD)']
names_count {'Quarter (CAD)': 6, 'Toonie (CAD)': 1, 'Loonie (CAD)': 1, 'Penny (CAD)': 1, 'Nickel (CAD)': 1}
coin_vals {'USD': 0, 'CAD': 4.56}
key CAD
Traceback (most recent call last):
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/test.py", line 10, in <module>
    main()
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/test.py", line 7, in main
    print('total amount', detector.get_total_amount('USD'))
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/detect.py", line 97, in get_total_amount
    converted_amount += converter.convert(key, currency, coin_vals[key])
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 97, in convert
    rate = self._get_decoded_rate(
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 47, in _get_decoded_rate
    return self._decode_rates(
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 40, in _decode_rates
    decoded_data = response.json()
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/requests/models.py", line 900, in json
    return complexjson.loads(self.text, **kwargs)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/__init__.py", line 525, in loads
    return _default_decoder.decode(s)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/decoder.py", line 370, in decode
    obj, end = self.raw_decode(s)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/decoder.py", line 400, in raw_decode
    return self.scan_once(s, idx=_w(s, idx).end())
simplejson.errors.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
(base) ]0;~/teams/SC22-BatchC-GoldenGorillas/app[01;34m~/teams/SC22-BatchC-GoldenGorillas/app[00m$ python test.py
Using cache found in /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/.cache/torch/hub/ultralytics_yolov5_master
YOLOv5 🚀 2022-8-2 Python-3.9.12 torch-1.8.1+cu102 CPU

Fusing layers... 
Model summary: 290 layers, 20897385 parameters, 0 gradients
Adding AutoShape... 
Model sucessfully loaded
Inference complete with results: 
         xmin        ymin        xmax        ymax  confidence  class  \
0  725.028381  235.216415  977.213745  522.082825    0.823891      9   
1  378.476685    7.081852  621.540771  278.924072    0.816275     11   
2  614.700989    7.742162  870.761414  282.140015    0.781272      4   
3    3.029530  241.974823  272.461395  515.072021    0.780688      7   
4  119.120354    7.214166  390.344910  278.808319    0.627838      9   
5  258.568787  247.795868  505.492523  519.405518    0.606827      5   
6  614.700806    7.849881  871.227051  280.146881    0.565108      9   
7  377.498688    9.193030  617.979248  277.467468    0.376909      9   
8  490.577698  252.628342  738.847595  521.291992    0.351326      9   
9  257.224091  243.662170  505.045654  517.535217    0.342347      9   

            name  
0  Quarter (CAD)  
1   Toonie (CAD)  
2   Loonie (CAD)  
3    Penny (CAD)  
4  Quarter (CAD)  
5   Nickel (CAD)  
6  Quarter (CAD)  
7  Quarter (CAD)  
8  Quarter (CAD)  
9  Quarter (CAD)  
Saved 1 image to [1mresults[0m
names ['Quarter (CAD)', 'Toonie (CAD)', 'Loonie (CAD)', 'Penny (CAD)', 'Quarter (CAD)', 'Nickel (CAD)', 'Quarter (CAD)', 'Quarter (CAD)', 'Quarter (CAD)', 'Quarter (CAD)']
names_count {'Quarter (CAD)': 6, 'Toonie (CAD)': 1, 'Loonie (CAD)': 1, 'Penny (CAD)': 1, 'Nickel (CAD)': 1}
coin_vals {'USD': 0, 'CAD': 4.56}
CAD USD 4.56
Traceback (most recent call last):
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/test.py", line 10, in <module>
    main()
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/test.py", line 7, in main
    print('total amount', detector.get_total_amount('USD'))
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/detect.py", line 97, in get_total_amount
    converted_amount += converter.convert(key, currency, coin_vals[key])
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 97, in convert
    rate = self._get_decoded_rate(
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 47, in _get_decoded_rate
    return self._decode_rates(
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 40, in _decode_rates
    decoded_data = response.json()
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/requests/models.py", line 900, in json
    return complexjson.loads(self.text, **kwargs)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/__init__.py", line 525, in loads
    return _default_decoder.decode(s)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/decoder.py", line 370, in decode
    obj, end = self.raw_decode(s)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/decoder.py", line 400, in raw_decode
    return self.scan_once(s, idx=_w(s, idx).end())
simplejson.errors.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
(base) ]0;~/teams/SC22-BatchC-GoldenGorillas/app[01;34m~/teams/SC22-BatchC-GoldenGorillas/app[00m$ python test.py
Using cache found in /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/.cache/torch/hub/ultralytics_yolov5_master
YOLOv5 🚀 2022-8-2 Python-3.9.12 torch-1.8.1+cu102 CPU

Fusing layers... 
Model summary: 290 layers, 20897385 parameters, 0 gradients
Adding AutoShape... 
Model sucessfully loaded
Inference complete with results: 
         xmin        ymin        xmax        ymax  confidence  class  \
0  725.028381  235.216415  977.213745  522.082825    0.823891      9   
1  378.476685    7.081852  621.540771  278.924072    0.816275     11   
2  614.700989    7.742162  870.761414  282.140015    0.781272      4   
3    3.029530  241.974823  272.461395  515.072021    0.780688      7   
4  119.120354    7.214166  390.344910  278.808319    0.627838      9   
5  258.568787  247.795868  505.492523  519.405518    0.606827      5   
6  614.700806    7.849881  871.227051  280.146881    0.565108      9   
7  377.498688    9.193030  617.979248  277.467468    0.376909      9   
8  490.577698  252.628342  738.847595  521.291992    0.351326      9   
9  257.224091  243.662170  505.045654  517.535217    0.342347      9   

            name  
0  Quarter (CAD)  
1   Toonie (CAD)  
2   Loonie (CAD)  
3    Penny (CAD)  
4  Quarter (CAD)  
5   Nickel (CAD)  
6  Quarter (CAD)  
7  Quarter (CAD)  
8  Quarter (CAD)  
9  Quarter (CAD)  
Saved 1 image to [1mresults[0m
names ['Quarter (CAD)', 'Toonie (CAD)', 'Loonie (CAD)', 'Penny (CAD)', 'Quarter (CAD)', 'Nickel (CAD)', 'Quarter (CAD)', 'Quarter (CAD)', 'Quarter (CAD)', 'Quarter (CAD)']
names_count {'Quarter (CAD)': 6, 'Toonie (CAD)': 1, 'Loonie (CAD)': 1, 'Penny (CAD)': 1, 'Nickel (CAD)': 1}
coin_vals {'USD': 0, 'CAD': 4.56}
CAD USD 4.56
Traceback (most recent call last):
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/test.py", line 10, in <module>
    main()
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/test.py", line 7, in main
    print('total amount', detector.get_total_amount('USD'))
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/detect.py", line 97, in get_total_amount
    amount = converter.convert(key, currency, coin_vals[key])
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 97, in convert
    rate = self._get_decoded_rate(
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 47, in _get_decoded_rate
    return self._decode_rates(
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 40, in _decode_rates
    decoded_data = response.json()
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/requests/models.py", line 900, in json
    return complexjson.loads(self.text, **kwargs)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/__init__.py", line 525, in loads
    return _default_decoder.decode(s)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/decoder.py", line 370, in decode
    obj, end = self.raw_decode(s)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/decoder.py", line 400, in raw_decode
    return self.scan_once(s, idx=_w(s, idx).end())
simplejson.errors.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
(base) ]0;~/teams/SC22-BatchC-GoldenGorillas/app[01;34m~/teams/SC22-BatchC-GoldenGorillas/app[00m$ python test.py
Using cache found in /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/.cache/torch/hub/ultralytics_yolov5_master
YOLOv5 🚀 2022-8-2 Python-3.9.12 torch-1.8.1+cu102 CPU

Fusing layers... 
Model summary: 290 layers, 20897385 parameters, 0 gradients
Adding AutoShape... 
Model sucessfully loaded
Inference complete with results: 
         xmin        ymin        xmax        ymax  confidence  class  \
0  725.028381  235.216415  977.213745  522.082825    0.823891      9   
1  378.476685    7.081852  621.540771  278.924072    0.816275     11   
2  614.700989    7.742162  870.761414  282.140015    0.781272      4   
3    3.029530  241.974823  272.461395  515.072021    0.780688      7   
4  119.120354    7.214166  390.344910  278.808319    0.627838      9   
5  258.568787  247.795868  505.492523  519.405518    0.606827      5   
6  614.700806    7.849881  871.227051  280.146881    0.565108      9   
7  377.498688    9.193030  617.979248  277.467468    0.376909      9   
8  490.577698  252.628342  738.847595  521.291992    0.351326      9   
9  257.224091  243.662170  505.045654  517.535217    0.342347      9   

            name  
0  Quarter (CAD)  
1   Toonie (CAD)  
2   Loonie (CAD)  
3    Penny (CAD)  
4  Quarter (CAD)  
5   Nickel (CAD)  
6  Quarter (CAD)  
7  Quarter (CAD)  
8  Quarter (CAD)  
9  Quarter (CAD)  
Saved 1 image to [1mresults[0m
names ['Quarter (CAD)', 'Toonie (CAD)', 'Loonie (CAD)', 'Penny (CAD)', 'Quarter (CAD)', 'Nickel (CAD)', 'Quarter (CAD)', 'Quarter (CAD)', 'Quarter (CAD)', 'Quarter (CAD)']
names_count {'Quarter (CAD)': 6, 'Toonie (CAD)': 1, 'Loonie (CAD)': 1, 'Penny (CAD)': 1, 'Nickel (CAD)': 1}
coin_vals {'USD': 0, 'CAD': 4.56}
CAD USD 4.56
Traceback (most recent call last):
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/test.py", line 10, in <module>
    main()
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/test.py", line 7, in main
    print('total amount', detector.get_total_amount('USD'))
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/detect.py", line 97, in get_total_amount
    amount = converter.convert('CAD', 'USD', 4.56)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 97, in convert
    rate = self._get_decoded_rate(
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 47, in _get_decoded_rate
    return self._decode_rates(
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 40, in _decode_rates
    decoded_data = response.json()
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/requests/models.py", line 900, in json
    return complexjson.loads(self.text, **kwargs)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/__init__.py", line 525, in loads
    return _default_decoder.decode(s)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/decoder.py", line 370, in decode
    obj, end = self.raw_decode(s)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/decoder.py", line 400, in raw_decode
    return self.scan_once(s, idx=_w(s, idx).end())
simplejson.errors.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
(base) ]0;~/teams/SC22-BatchC-GoldenGorillas/app[01;34m~/teams/SC22-BatchC-GoldenGorillas/app[00m$ pip unintall fo[K[K[K[K[K[K[K[Kst[K[Knstall forex
[33mWARNING: Skipping forex as it is not installed.[0m
(base) ]0;~/teams/SC22-BatchC-GoldenGorillas/app[01;34m~/teams/SC22-BatchC-GoldenGorillas/app[00m$ pip uninstall forex-python
Found existing installation: forex-python 1.8
Uninstalling forex-python-1.8:
  Would remove:
    /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/docs/*
    /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python-1.8.dist-info/*
    /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/*
Proceed (Y/n)? y
  Successfully uninstalled forex-python-1.8
(base) ]0;~/teams/SC22-BatchC-GoldenGorillas/app[01;34m~/teams/SC22-BatchC-GoldenGorillas/app[00m$ pip install forex-python
Collecting forex-python
  Using cached forex_python-1.8-py3-none-any.whl (8.2 kB)
Requirement already satisfied: simplejson in /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages (from forex-python) (3.17.6)
Requirement already satisfied: requests in /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages (from forex-python) (2.25.1)
Requirement already satisfied: urllib3<1.27,>=1.21.1 in /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages (from requests->forex-python) (1.26.5)
Requirement already satisfied: certifi>=2017.4.17 in /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages (from requests->forex-python) (2020.12.5)
Requirement already satisfied: chardet<5,>=3.0.2 in /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages (from requests->forex-python) (4.0.0)
Requirement already satisfied: idna<3,>=2.5 in /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages (from requests->forex-python) (2.10)
Installing collected packages: forex-python
Successfully installed forex-python-1.8
(base) ]0;~/teams/SC22-BatchC-GoldenGorillas/app[01;34m~/teams/SC22-BatchC-GoldenGorillas/app[00m$ pip install forex-python[2@un[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[5Python test.py
Using cache found in /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/.cache/torch/hub/ultralytics_yolov5_master
YOLOv5 🚀 2022-8-2 Python-3.9.12 torch-1.8.1+cu102 CPU

Fusing layers... 
Model summary: 290 layers, 20897385 parameters, 0 gradients
Adding AutoShape... 
Model sucessfully loaded
Inference complete with results: 
         xmin        ymin        xmax        ymax  confidence  class  \
0  725.028381  235.216415  977.213745  522.082825    0.823891      9   
1  378.476685    7.081852  621.540771  278.924072    0.816275     11   
2  614.700989    7.742162  870.761414  282.140015    0.781272      4   
3    3.029530  241.974823  272.461395  515.072021    0.780688      7   
4  119.120354    7.214166  390.344910  278.808319    0.627838      9   
5  258.568787  247.795868  505.492523  519.405518    0.606827      5   
6  614.700806    7.849881  871.227051  280.146881    0.565108      9   
7  377.498688    9.193030  617.979248  277.467468    0.376909      9   
8  490.577698  252.628342  738.847595  521.291992    0.351326      9   
9  257.224091  243.662170  505.045654  517.535217    0.342347      9   

            name  
0  Quarter (CAD)  
1   Toonie (CAD)  
2   Loonie (CAD)  
3    Penny (CAD)  
4  Quarter (CAD)  
5   Nickel (CAD)  
6  Quarter (CAD)  
7  Quarter (CAD)  
8  Quarter (CAD)  
9  Quarter (CAD)  
Saved 1 image to [1mresults[0m
names ['Quarter (CAD)', 'Toonie (CAD)', 'Loonie (CAD)', 'Penny (CAD)', 'Quarter (CAD)', 'Nickel (CAD)', 'Quarter (CAD)', 'Quarter (CAD)', 'Quarter (CAD)', 'Quarter (CAD)']
names_count {'Quarter (CAD)': 6, 'Toonie (CAD)': 1, 'Loonie (CAD)': 1, 'Penny (CAD)': 1, 'Nickel (CAD)': 1}
coin_vals {'USD': 0, 'CAD': 4.56}
CAD USD 4.56
Traceback (most recent call last):
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/test.py", line 10, in <module>
    main()
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/test.py", line 7, in main
    print('total amount', detector.get_total_amount('USD'))
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/detect.py", line 97, in get_total_amount
    amount = converter.convert('CAD', 'USD', 4.56)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 97, in convert
    rate = self._get_decoded_rate(
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 47, in _get_decoded_rate
    return self._decode_rates(
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 40, in _decode_rates
    decoded_data = response.json()
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/requests/models.py", line 900, in json
    return complexjson.loads(self.text, **kwargs)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/__init__.py", line 525, in loads
    return _default_decoder.decode(s)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/decoder.py", line 370, in decode
    obj, end = self.raw_decode(s)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/decoder.py", line 400, in raw_decode
    return self.scan_once(s, idx=_w(s, idx).end())
simplejson.errors.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
(base) ]0;~/teams/SC22-BatchC-GoldenGorillas/app[01;34m~/teams/SC22-BatchC-GoldenGorillas/app[00m$ python test.py
Traceback (most recent call last):
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/test.py", line 8, in <module>
    main()
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/test.py", line 5, in main
    converter.get_rates('USD')
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 60, in get_rates
    rates = self._decode_rates(response, date_str=date_str)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 40, in _decode_rates
    decoded_data = response.json()
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/requests/models.py", line 900, in json
    return complexjson.loads(self.text, **kwargs)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/__init__.py", line 525, in loads
    return _default_decoder.decode(s)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/decoder.py", line 370, in decode
    obj, end = self.raw_decode(s)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/decoder.py", line 400, in raw_decode
    return self.scan_once(s, idx=_w(s, idx).end())
simplejson.errors.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
(base) ]0;~/teams/SC22-BatchC-GoldenGorillas/app[01;34m~/teams/SC22-BatchC-GoldenGorillas/app[00m$ pip uninstall simple [Kjson
Found existing installation: simplejson 3.17.6
Uninstalling simplejson-3.17.6:
  Would remove:
    /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson-3.17.6.dist-info/*
    /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/*
Proceed (Y/n)? y
  Successfully uninstalled simplejson-3.17.6
(base) ]0;~/teams/SC22-BatchC-GoldenGorillas/app[01;34m~/teams/SC22-BatchC-GoldenGorillas/app[00m$ pip uninstall forex-python
Found existing installation: forex-python 1.8
Uninstalling forex-python-1.8:
  Would remove:
    /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/docs/*
    /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python-1.8.dist-info/*
    /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/*
Proceed (Y/n)? y
  Successfully uninstalled forex-python-1.8
(base) ]0;~/teams/SC22-BatchC-GoldenGorillas/app[01;34m~/teams/SC22-BatchC-GoldenGorillas/app[00m$ pip install forex-python
Collecting forex-python
  Using cached forex_python-1.8-py3-none-any.whl (8.2 kB)
Requirement already satisfied: requests in /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages (from forex-python) (2.25.1)
Collecting simplejson
  Using cached simplejson-3.17.6-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (136 kB)
Requirement already satisfied: idna<3,>=2.5 in /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages (from requests->forex-python) (2.10)
Requirement already satisfied: certifi>=2017.4.17 in /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages (from requests->forex-python) (2020.12.5)
Requirement already satisfied: urllib3<1.27,>=1.21.1 in /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages (from requests->forex-python) (1.26.5)
Requirement already satisfied: chardet<5,>=3.0.2 in /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages (from requests->forex-python) (4.0.0)
Installing collected packages: simplejson, forex-python
Successfully installed forex-python-1.8 simplejson-3.17.6
(base) ]0;~/teams/SC22-BatchC-GoldenGorillas/app[01;34m~/teams/SC22-BatchC-GoldenGorillas/app[00m$ pip install forex-python[2@un[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[2Psimplejson[10Python test.py
Traceback (most recent call last):
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/test.py", line 8, in <module>
    main()
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/test.py", line 5, in main
    converter.get_rates('USD')
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 60, in get_rates
    rates = self._decode_rates(response, date_str=date_str)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 40, in _decode_rates
    decoded_data = response.json()
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/requests/models.py", line 900, in json
    return complexjson.loads(self.text, **kwargs)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/__init__.py", line 525, in loads
    return _default_decoder.decode(s)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/decoder.py", line 370, in decode
    obj, end = self.raw_decode(s)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/decoder.py", line 400, in raw_decode
    return self.scan_once(s, idx=_w(s, idx).end())
simplejson.errors.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
(base) ]0;~/teams/SC22-BatchC-GoldenGorillas/app[01;34m~/teams/SC22-BatchC-GoldenGorillas/app[00m$ python test.py
Traceback (most recent call last):
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/test.py", line 10, in <module>
    main()
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/test.py", line 6, in main
    print(converter.get_rate('USD', 'GBP'))
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 74, in get_rate
    rate = self._get_decoded_rate(response, dest_cur, date_str=date_str)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 47, in _get_decoded_rate
    return self._decode_rates(
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/converter.py", line 40, in _decode_rates
    decoded_data = response.json()
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/requests/models.py", line 900, in json
    return complexjson.loads(self.text, **kwargs)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/__init__.py", line 525, in loads
    return _default_decoder.decode(s)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/decoder.py", line 370, in decode
    obj, end = self.raw_decode(s)
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/simplejson/decoder.py", line 400, in raw_decode
    return self.scan_once(s, idx=_w(s, idx).end())
simplejson.errors.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
(base) ]0;~/teams/SC22-BatchC-GoldenGorillas/app[01;34m~/teams/SC22-BatchC-GoldenGorillas/app[00m$ pip uninstall forex-python
Found existing installation: forex-python 1.8
Uninstalling forex-python-1.8:
  Would remove:
    /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/docs/*
    /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python-1.8.dist-info/*
    /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/forex_python/*
Proceed (Y/n)? y
  Successfully uninstalled forex-python-1.8
(base) ]0;~/teams/SC22-BatchC-GoldenGorillas/app[01;34m~/teams/SC22-BatchC-GoldenGorillas/app[00m$ pip install cure[Krency_converter
Collecting currency_converter
  Downloading currency.converter-0.5.5.tar.gz (53 kB)
[?25l[K     |██████▏                         | 10 kB 21.4 MB/s eta 0:00:01[K     |████████████▎                   | 20 kB 24.6 MB/s eta 0:00:01[K     |██████████████████▍             | 30 kB 29.0 MB/s eta 0:00:01[K     |████████████████████████▌       | 40 kB 31.7 MB/s eta 0:00:01[K     |██████████████████████████████▋ | 51 kB 28.4 MB/s eta 0:00:01[K     |████████████████████████████████| 53 kB 3.3 MB/s 
[?25hRequirement already satisfied: setuptools in /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages (from currency_converter) (61.2.0)
Building wheels for collected packages: currency-converter
  Building wheel for currency-converter (setup.py) ... [?25l- \ | / - \ | done
[?25h  Created wheel for currency-converter: filename=currency.converter-0.5.5-py3-none-any.whl size=65941 sha256=d5318ebd3a5022e0d4b3fa75f7d7b2fe2b5edda2eecdc67d0e1c4be49aac7082
  Stored in directory: /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/.cache/pip/wheels/32/17/bd/35d81cc2e6834b1e0f7fa273e667b71933a92b2360e76ac30d
Successfully built currency-converter
Installing collected packages: currency-converter
Successfully installed currency-converter-0.5.5
(base) ]0;~/teams/SC22-BatchC-GoldenGorillas/app[01;34m~/teams/SC22-BatchC-GoldenGorillas/app[00m$ pip install currency_converter
Requirement already satisfied: currency_converter in /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages (0.5.5)
Requirement already satisfied: setuptools in /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages (from currency_converter) (61.2.0)
(base) ]0;~/teams/SC22-BatchC-GoldenGorillas/app[01;34m~/teams/SC22-BatchC-GoldenGorillas/app[00m$ pip install currency_converter[4Puninstall forex-python[12Python test.pyip install forex-python[10Python test.py
Traceback (most recent call last):
  File "/projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/teams/SC22-BatchC-GoldenGorillas/app/test.py", line 1, in <module>
    from currency_converter import CurrencyConverter
ModuleNotFoundError: No module named 'currency_converter'
(base) ]0;~/teams/SC22-BatchC-GoldenGorillas/app[01;34m~/teams/SC22-BatchC-GoldenGorillas/app[00m$ pip uninsts[K[K[Kstall currency_converter
Found existing installation: currency.converter 0.5.5
Uninstalling currency.converter-0.5.5:
  Would remove:
    /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/currency.converter-0.5.5-py3.9-nspkg.pth
    /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/currency.converter-0.5.5.dist-info/*
    /projects/b5c2a7f5-256b-4b99-ae4c-0f03a7aae105/miniconda3/lib/python3.9/site-packages/currency/converter/*
Proceed (Y/n)? y
  Successfully uninstalled currency.converter-0.5.5
(base) ]0;~/teams/SC22-BatchC-GoldenGorillas/app[01;34m~/teams/SC22-BatchC-GoldenGorillas/app[00m$ pip install currencyconverter
Collecting currencyconverter
  Downloading CurrencyConverter-0.17-py3-none-any.whl (551 kB)
[?25l[K     |▋                               | 10 kB 15.5 MB/s eta 0:00:01[K     |█▏                              | 20 kB 17.2 MB/s eta 0:00:01[K     |█▉                              | 30 kB 21.4 MB/s eta 0:00:01[K     |██▍                             | 40 kB 24.5 MB/s eta 0:00:01[K     |███                             | 51 kB 20.1 MB/s eta 0:00:01[K     |███▋                            | 61 kB 22.6 MB/s eta 0:00:01[K     |████▏                           | 71 kB 24.6 MB/s eta 0:00:01[K     |████▊                           | 81 kB 25.6 MB/s eta 0:00:01[K     |█████▍                          | 92 kB 26.8 MB/s eta 0:00:01[K     |██████                          | 102 kB 28.2 MB/s eta 0:00:01[K     |██████▌                         | 112 kB 28.2 MB/s eta 0:00:01[K     |███████▏                        | 122 kB 28.2 MB/s eta 0:00:01[K     |███████▊                        | 133 kB 28.2 MB/s eta 0:00:01[K     |████████▎                       | 143 kB 28.2 MB/s eta 0:00:01[K     |█████████                       | 153 kB 28.2 MB/s eta 0:00:01[K     |█████████▌                      | 163 kB 28.2 MB/s eta 0:00:01[K     |██████████                      | 174 kB 28.2 MB/s eta 0:00:01[K     |██████████▊                     | 184 kB 28.2 MB/s eta 0:00:01[K     |███████████▎                    | 194 kB 28.2 MB/s eta 0:00:01[K     |███████████▉                    | 204 kB 28.2 MB/s eta 0:00:01[K     |████████████▌                   | 215 kB 28.2 MB/s eta 0:00:01[K     |█████████████                   | 225 kB 28.2 MB/s eta 0:00:01[K     |█████████████▋                  | 235 kB 28.2 MB/s eta 0:00:01[K     |██████████████▎                 | 245 kB 28.2 MB/s eta 0:00:01[K     |██████████████▉                 | 256 kB 28.2 MB/s eta 0:00:01[K     |███████████████▍                | 266 kB 28.2 MB/s eta 0:00:01[K     |████████████████                | 276 kB 28.2 MB/s eta 0:00:01[K     |████████████████▋               | 286 kB 28.2 MB/s eta 0:00:01[K     |█████████████████▏              | 296 kB 28.2 MB/s eta 0:00:01[K     |█████████████████▉              | 307 kB 28.2 MB/s eta 0:00:01[K     |██████████████████▍             | 317 kB 28.2 MB/s eta 0:00:01[K     |███████████████████             | 327 kB 28.2 MB/s eta 0:00:01[K     |███████████████████▋            | 337 kB 28.2 MB/s eta 0:00:01[K     |████████████████████▏           | 348 kB 28.2 MB/s eta 0:00:01[K     |████████████████████▉           | 358 kB 28.2 MB/s eta 0:00:01[K     |█████████████████████▍          | 368 kB 28.2 MB/s eta 0:00:01[K     |██████████████████████          | 378 kB 28.2 MB/s eta 0:00:01[K     |██████████████████████▋         | 389 kB 28.2 MB/s eta 0:00:01[K     |███████████████████████▏        | 399 kB 28.2 MB/s eta 0:00:01[K     |███████████████████████▊        | 409 kB 28.2 MB/s eta 0:00:01[K     |████████████████████████▍       | 419 kB 28.2 MB/s eta 0:00:01[K     |█████████████████████████       | 430 kB 28.2 MB/s eta 0:00:01[K     |█████████████████████████▌      | 440 kB 28.2 MB/s eta 0:00:01[K     |██████████████████████████▏     | 450 kB 28.2 MB/s eta 0:00:01[K     |██████████████████████████▊     | 460 kB 28.2 MB/s eta 0:00:01[K     |███████████████████████████▎    | 471 kB 28.2 MB/s eta 0:00:01[K     |████████████████████████████    | 481 kB 28.2 MB/s eta 0:00:01[K     |████████████████████████████▌   | 491 kB 28.2 MB/s eta 0:00:01[K     |█████████████████████████████   | 501 kB 28.2 MB/s eta 0:00:01[K     |█████████████████████████████▊  | 512 kB 28.2 MB/s eta 0:00:01[K     |██████████████████████████████▎ | 522 kB 28.2 MB/s eta 0:00:01[K     |██████████████████████████████▉ | 532 kB 28.2 MB/s eta 0:00:01[K     |███████████████████████████████▌| 542 kB 28.2 MB/s eta 0:00:01[K     |████████████████████████████████| 551 kB 28.2 MB/s 
[?25hInstalling collected packages: currencyconverter
Successfully installed currencyconverter-0.17
(base) ]0;~/teams/SC22-BatchC-GoldenGorillas/app[01;34m~/teams/SC22-BatchC-GoldenGorillas/app[00m$ pip install currencyconverteruninstall currency_converter[18Python test.py
5.9193129997038785
(base) ]0;~/teams/SC22-BatchC-GoldenGorillas/app[01;34m~/teams/SC22-BatchC-GoldenGorillas/app[00m$ python test.py
3.51284008820622
(base) ]0;~/teams/SC22-BatchC-GoldenGorillas/app[01;34m~/teams/SC22-BatchC-GoldenGorillas/app[00m$ 